from unicodedata import name
from aiogram import types, Dispatcher
from aiogram.dispatcher.filters import Text
from create_bot import dp, bot
from keyboards import kb_person, kb_answer
from parsers import parse
from aiogram.types import ReplyKeyboardMarkup, KeyboardButton, ReplyKeyboardRemove
from googleDisk import google
from aiogram import types
from aiogram.dispatcher import FSMContext
from handlers import search_state



@dp.message_handler(state=search_state.var_name)
async def take_first_state(message: types.Message, state: FSMContext):
    staf = google.open_list_employees(message.text)
    await state.finish()    
    for staff in staf:
        await bot.send_message(message.from_user.id, f'–ò–º—è: {staff[0]} {staff[1]} {staff[2]}\n–î–∞—Ç–∞ —Ä–æ–∂–¥–µ–Ω–∏—è: {staff[4]}\nemail: {staff[6]}\n–ù–æ–º–µ—Ä —Ç–µ–ª–µ—Ñ–æ–Ω–∞: {staff[7]}\n–ú–µ—Å—Ç–æ —Ä–∞–±–æ—Ç—ã: {staff[8]}\n–î–æ–ª–∂–Ω–æ—Å—Ç—å: {staff[9]}')


async def command_person(message: types.Message):
    await bot.send_message(message.from_user.id, '–í—ã–±–µ—Ä–∏—Ç–µ –ø—É–Ω–∫—Ç', reply_markup=kb_person)
    await message.delete()


@dp.message_handler(Text(equals='üîç –°–æ—Ç—Ä—É–¥–Ω–∏–∫–∏ –∫–æ–º–ø–∞–Ω–∏–∏'))
async def search_employees(message: types.Message):
    await bot.send_message(message.from_user.id, '–ù–∞–∂–º–∏—Ç–µ –Ω–∞ –∫–Ω–æ–ø–∫—É –Ω–∞–π—Ç–∏, –¥–∞–ª–µ–µ –Ω–∞–ø–∏—à–∏—Ç–µ –∏–º—è, —Ñ–∞–º–∏–ª–∏—é\n–Ω–æ–º–µ—Ä —Ç–µ–ª–µ—Ñ–æ–Ω–∞ –≤ —Ñ–æ—Ä–º–∞—Ç–µ 9*********\n–¥–æ–ª–∂–Ω–æ—Å—Ç—å', reply_markup=kb_answer)

@dp.message_handler(Text(equals='–ù–∞–π—Ç–∏'), state=None)
async def search(message: types.Message):
    await search_state.var_name.name.set()

@dp.message_handler(Text(equals='üà∫ –í–∞–∫–∞–Ω—Å–∏–∏ –∫–æ–º–ø–∞–Ω–∏–∏'))
async def vac(message: types.Message):
    vacancy = parse(True)
    for item in vacancy:
        await bot.send_message(message.from_user.id, item)